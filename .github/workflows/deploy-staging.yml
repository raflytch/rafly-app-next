name: Deploy to Staging

on:
    push:
        branches: ["develop", "staging"]
    workflow_dispatch:
        inputs:
            environment:
                description: "Environment to deploy to"
                required: true
                default: "staging"
                type: choice
                options:
                    - staging
                    - production

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    deploy-staging:
        name: Deploy to ${{ github.event.inputs.environment || 'staging' }}
        runs-on: ubuntu-latest
        environment: ${{ github.event.inputs.environment || 'staging' }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup SSH
              uses: webfactory/ssh-agent@v0.9.0
              with:
                  ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

            - name: Deploy to server
              run: |
                  echo "üöÄ Deploying to ${{ github.event.inputs.environment || 'staging' }}..."

                  # SSH ke server dan deploy
                  ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
                    cd /opt/rafly-app-next

                    # Pull latest image
                    echo "üì¶ Pulling latest Docker image..."
                    docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

                    # Stop existing container
                    echo "üõë Stopping existing container..."
                    docker-compose down

                    # Start new container
                    echo "‚ñ∂Ô∏è Starting new container..."
                    docker-compose up -d

                    # Wait for container to be healthy
                    echo "‚è≥ Waiting for container to be healthy..."
                    sleep 30

                    # Check if container is running
                    if docker-compose ps | grep -q "Up"; then
                      echo "‚úÖ Deployment successful!"
                      echo "üåê Application is running at: http://${{ secrets.SERVER_HOST }}"
                    else
                      echo "‚ùå Deployment failed!"
                      docker-compose logs
                      exit 1
                    fi
                  EOF

            - name: Health check
              run: |
                  echo "üîç Performing health check..."
                  sleep 10

                  # Health check dengan retry
                  for i in {1..5}; do
                    if curl -f -s http://${{ secrets.SERVER_HOST }} > /dev/null; then
                      echo "‚úÖ Health check passed!"
                      break
                    else
                      echo "‚ö†Ô∏è Health check failed (attempt $i/5), retrying..."
                      sleep 10
                    fi

                    if [ $i -eq 5 ]; then
                      echo "‚ùå Health check failed after 5 attempts!"
                      exit 1
                    fi
                  done

            - name: Send deployment notification
              if: always()
              run: |
                  if [ "${{ job.status }}" == "success" ]; then
                    echo "‚úÖ Staging deployment completed successfully!"
                    # Add success notification here (Slack, Discord, etc.)
                  else
                    echo "‚ùå Staging deployment failed!"
                    # Add failure notification here
                  fi
